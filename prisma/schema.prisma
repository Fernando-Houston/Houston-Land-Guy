generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String              @id @default(cuid())
  name          String?
  email         String?             @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          String              @default("USER")
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt
  accounts      Account[]
  portfolio     PortfolioProperty[]
  savedSearches SavedSearch[]
  sessions      Session[]
  activities    UserActivity[]
  profile       UserProfile?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model UserProfile {
  id          String   @id @default(cuid())
  userId      String   @unique
  userType    String   @default("INVESTOR")
  company     String?
  license     String?
  bio         String?
  phone       String?
  website     String?
  preferences Json     @default("{}")
  watchlist   String[] @default([])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model SavedSearch {
  id            String   @id @default(cuid())
  userId        String
  name          String
  criteria      Json
  alertsEnabled Boolean  @default(true)
  lastRun       DateTime @default(now())
  resultCount   Int      @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model PortfolioProperty {
  id            String   @id @default(cuid())
  userId        String
  propertyId    String
  purchasePrice Float
  purchaseDate  DateTime
  currentValue  Float?
  notes         String?
  status        String   @default("owned")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model UserActivity {
  id         String   @id @default(cuid())
  userId     String
  type       String
  propertyId String?
  metadata   Json?
  timestamp  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([type])
  @@index([timestamp])
}

model Lead {
  id                String             @id @default(cuid())
  email             String             @unique
  phone             String?
  name              String?
  company           String?
  source            LEAD_SOURCE
  status            LEAD_STATUS        @default(NEW)
  score             Int                @default(0)
  neighborhoods     String[]
  projectTypes      PROJECT_TYPE[]
  budgetMin         Float?
  budgetMax         Float?
  timeline          String?
  message           String?
  utmSource         String?
  utmMedium         String?
  utmCampaign       String?
  referrer          String?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  lastContactedAt   DateTime?
  calculatorResults CalculatorResult[]
  interactions      Interaction[]

  @@index([email])
  @@index([status])
  @@index([source])
  @@index([createdAt])
}

model Interaction {
  id        String   @id @default(cuid())
  leadId    String
  type      String
  details   Json
  createdAt DateTime @default(now())
  lead      Lead     @relation(fields: [leadId], references: [id])

  @@index([leadId])
  @@index([type])
  @@index([createdAt])
}

model CalculatorResult {
  id              String   @id @default(cuid())
  leadId          String?
  calculatorType  String
  inputs          Json
  roi             Float?
  totalCost       Float?
  projectedProfit Float?
  timeline        String?
  risks           Json?
  sessionId       String?
  completed       Boolean  @default(false)
  createdAt       DateTime @default(now())
  lead            Lead?    @relation(fields: [leadId], references: [id])

  @@index([leadId])
  @@index([calculatorType])
  @@index([createdAt])
}

model MarketData {
  id           String   @id @default(cuid())
  neighborhood String
  dataType     String
  data         Json
  source       String
  lastUpdated  DateTime @default(now())

  @@unique([neighborhood, dataType])
  @@index([neighborhood])
  @@index([dataType])
  @@index([lastUpdated])
}

model FernandoMemory {
  id           String   @id @default(cuid())
  userId       String?
  sessionId    String?
  memoryType   String
  content      Json
  embedding    Float[]
  metadata     Json?
  importance   Float    @default(0.5)
  accessCount  Int      @default(0)
  lastAccessed DateTime @default(now())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([userId])
  @@index([sessionId])
  @@index([memoryType])
  @@index([importance])
  @@index([lastAccessed])
}

model FernandoConversation {
  id        String    @id @default(cuid())
  userId    String?
  sessionId String
  messages  Json[]
  summary   String?
  topics    String[]
  sentiment String?
  startedAt DateTime  @default(now())
  endedAt   DateTime?
  duration  Int?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([userId])
  @@index([sessionId])
  @@index([startedAt])
}

model FernandoInsight {
  id          String    @id @default(cuid())
  insightType String
  title       String
  content     String
  data        Json
  confidence  Float
  tags        String[]
  relevantTo  String[]
  validFrom   DateTime  @default(now())
  validUntil  DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([insightType])
  @@index([confidence])
  @@index([validFrom])
}

model Property {
  id               String           @id @default(cuid())
  mlsNumber        String?          @unique
  address          String
  city             String
  state            String           @default("TX")
  zipCode          String
  neighborhood     String?
  county           String?
  coordinates      Json?
  propertyType     String
  propertySubType  String?
  status           String
  listPrice        Float?
  soldPrice        Float?
  pricePerSqft     Float?
  taxAssessedValue Float?
  lotSize          Float?
  squareFeet       Float?
  bedrooms         Int?
  bathrooms        Float?
  yearBuilt        Int?
  stories          Int?
  parkingSpaces    Int?
  features         String[]
  amenities        String[]
  appliances       String[]
  listDate         DateTime?
  soldDate         DateTime?
  lastModified     DateTime         @updatedAt
  createdAt        DateTime         @default(now())
  developerId      String?
  marketAnalyses   MarketAnalysis[]
  permits          Permit[]
  priceHistory     PriceHistory[]
  developer        Developer?       @relation(fields: [developerId], references: [id])

  @@index([mlsNumber])
  @@index([zipCode])
  @@index([neighborhood])
  @@index([propertyType])
  @@index([status])
  @@index([listPrice])
  @@index([coordinates], type: Gin)
}

model Developer {
  id                String     @id @default(cuid())
  name              String     @unique
  companyType       String
  website           String?
  phone             String?
  email             String?
  headquarters      String?
  activeProjects    Int        @default(0)
  completedProjects Int        @default(0)
  totalValue        Float      @default(0)
  averagePrice      Float?
  primaryFocus      String
  secondaryFocus    String?
  targetMarket      String[]
  primaryAreas      String[]
  foundedYear       Int?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  permits           Permit[]
  projects          Project[]
  properties        Property[]
}

model Project {
  id               String    @id @default(cuid())
  name             String
  projectType      String
  address          String?
  area             String
  coordinates      Json?
  totalAcres       Float?
  description      String?
  totalValue       Float
  phase            String
  startDate        DateTime?
  completionDate   DateTime?
  residentialUnits Int?
  commercialSqft   Float?
  retailSqft       Float?
  officeSqft       Float?
  developerId      String
  announcedDate    DateTime?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  permits          Permit[]
  developer        Developer @relation(fields: [developerId], references: [id])

  @@index([developerId])
  @@index([area])
  @@index([phase])
}

model Permit {
  id                String     @id @default(cuid())
  permitNumber      String     @unique
  address           String
  zipCode           String
  coordinates       Json?
  permitType        String
  workType          String
  description       String?
  declaredValue     Float?
  estimatedValue    Float?
  status            String
  applicationDate   DateTime
  approvalDate      DateTime?
  issueDate         DateTime?
  completionDate    DateTime?
  expirationDate    DateTime?
  ownerName         String?
  contractorName    String?
  contractorLicense String?
  propertyId        String?
  developerId       String?
  projectId         String?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  developer         Developer? @relation(fields: [developerId], references: [id])
  project           Project?   @relation(fields: [projectId], references: [id])
  property          Property?  @relation(fields: [propertyId], references: [id])

  @@index([permitNumber])
  @@index([zipCode])
  @@index([permitType])
  @@index([status])
  @@index([applicationDate])
}

model MarketMetrics {
  id                String   @id @default(cuid())
  areaName          String
  areaType          String
  zipCode           String?
  period            String
  startDate         DateTime
  endDate           DateTime
  activeListings    Int
  newListings       Int
  closedSales       Int
  pendingSales      Int
  inventory         Float
  medianPrice       Float
  averagePrice      Float
  pricePerSqft      Float
  medianPriceChange Float
  avgPriceChange    Float
  avgDaysOnMarket   Int
  avgDaysToClose    Int
  listToSaleRatio   Float
  absorptionRate    Float?
  marketHeatIndex   Float?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@unique([areaName, period, startDate])
  @@index([areaName])
  @@index([zipCode])
  @@index([period])
  @@index([startDate])
}

model PriceHistory {
  id            String   @id @default(cuid())
  propertyId    String
  price         Float
  priceType     String
  changeAmount  Float?
  changePercent Float?
  date          DateTime
  source        String?
  createdAt     DateTime @default(now())
  property      Property @relation(fields: [propertyId], references: [id])

  @@index([propertyId])
  @@index([date])
}

model MarketAnalysis {
  id              String   @id @default(cuid())
  propertyId      String
  analysisType    String
  estimatedValue  Float
  valueLow        Float
  valueHigh       Float
  confidence      Float
  comparableCount Int
  avgCompPrice    Float
  avgCompSqft     Float
  avgCompDays     Int
  marketPosition  String
  demandLevel     String
  estimatedRent   Float?
  capRate         Float?
  cashFlow        Float?
  analysisData    Json
  createdAt       DateTime @default(now())
  validUntil      DateTime
  property        Property @relation(fields: [propertyId], references: [id])

  @@index([propertyId])
  @@index([analysisType])
  @@index([createdAt])
}

model DataImport {
  id               String    @id @default(cuid())
  importType       String
  source           String
  status           String
  totalRecords     Int?
  processedRecords Int?
  failedRecords    Int?
  startedAt        DateTime
  completedAt      DateTime?
  errors           Json?
  metadata         Json?
  createdAt        DateTime  @default(now())

  @@index([importType])
  @@index([status])
  @@index([startedAt])
}

model HarMlsReport {
  id              String                @id @default(cuid())
  month           Int
  year            Int
  reportType      String
  totalSales      Int
  totalVolume     Float
  avgSalePrice    Float
  medianSalePrice Float
  pricePerSqft    Float
  salesChangeYoY  Float
  priceChangeYoY  Float
  volumeChangeYoY Float
  activeListings  Int
  newListings     Int
  pendingSales    Int
  monthsInventory Float
  avgDaysOnMarket Int
  under200k       Int
  from200to400k   Int
  from400to600k   Int
  from600to800k   Int
  from800to1M     Int
  over1M          Int
  singleFamily    Int
  townhouse       Int
  condo           Int
  metadata        Json?
  createdAt       DateTime              @default(now())
  updatedAt       DateTime              @updatedAt
  neighborhoods   HarNeighborhoodData[]

  @@unique([month, year, reportType])
  @@index([year, month])
}

model HarNeighborhoodData {
  id                String       @id @default(cuid())
  reportId          String
  neighborhood      String
  zipCode           String?
  totalSales        Int
  avgSalePrice      Float
  medianSalePrice   Float
  pricePerSqft      Float
  activeListings    Int
  monthsInventory   Float
  avgDaysOnMarket   Int
  listToSaleRatio   Float?
  sellerConcessions Float?
  metadata          Json?
  report            HarMlsReport @relation(fields: [reportId], references: [id])

  @@index([reportId])
  @@index([neighborhood])
  @@index([zipCode])
}

model ConstructionActivity {
  id             String    @id @default(cuid())
  permitNumber   String    @unique
  permitType     String
  subType        String?
  address        String
  zipCode        String
  neighborhood   String?
  precinct       String?
  projectName    String?
  developer      String?
  contractor     String?
  estimatedCost  Float?
  squareFootage  Int?
  units          Int?
  stories        Int?
  permitDate     DateTime
  startDate      DateTime?
  completionDate DateTime?
  status         String
  metadata       Json?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  @@index([zipCode])
  @@index([permitDate])
  @@index([status])
  @@index([permitType])
}

model MarketIntelligence {
  id                   String   @id @default(cuid())
  dataType             String
  zipCode              String?
  neighborhood         String?
  marketShare          Float?
  competitors          Int?
  capRate              Float?
  roi                  Float?
  investmentScore      Float?
  plannedUnits         Int?
  underConstruction    Int?
  gentrificationScore  Float?
  walkabilityScore     Float?
  schoolRating         Float?
  crimeIndex           Float?
  foreignInvestmentPct Float?
  institutionalPct     Float?
  dataDate             DateTime
  metadata             Json?
  createdAt            DateTime @default(now())

  @@index([dataType])
  @@index([zipCode])
  @@index([dataDate])
}

model CostAnalysis {
  id             String   @id @default(cuid())
  analysisType   String
  location       String
  costPerSqft    Float?
  materialsCost  Float?
  laborCost      Float?
  hourlyRate     Float?
  skillLevel     String?
  tradeType      String?
  pricePerAcre   Float?
  pricePerSqft   Float?
  permitType     String?
  baseFee        Float?
  additionalFees Json?
  effectiveDate  DateTime
  metadata       Json?
  createdAt      DateTime @default(now())

  @@index([analysisType])
  @@index([location])
  @@index([effectiveDate])
}

model QualityOfLife {
  id               String   @id @default(cuid())
  zipCode          String
  neighborhood     String?
  crimeRate        Float
  crimeReduction   Float?
  safetyScore      Float
  walkScore        Float
  transitScore     Float?
  bikeScore        Float?
  parksCount       Int?
  restaurantsCount Int?
  groceryCount     Int?
  schoolsCount     Int?
  avgSchoolRating  Float?
  dataDate         DateTime
  metadata         Json?
  createdAt        DateTime @default(now())

  @@unique([zipCode, dataDate])
  @@index([neighborhood])
}

model RentalMarket {
  id                 String   @id @default(cuid())
  zipCode            String?
  neighborhood       String?
  submarket          String?
  avgRentStudio      Float?
  avgRent1BR         Float?
  avgRent2BR         Float?
  avgRent3BR         Float?
  avgRent4BR         Float?
  occupancyRate      Float?
  occupancyClass     String?
  yearOverYearGrowth Float?
  quarterOverQuarter Float?
  totalUnits         Int?
  deliveredUnits     Int?
  underConstruction  Int?
  plannedUnits       Int?
  netAbsorption      Int?
  leasingVelocity    Float?
  concessions        Float?
  reportDate         DateTime
  reportPeriod       String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@unique([zipCode, reportDate])
  @@unique([neighborhood, reportDate])
  @@index([zipCode])
  @@index([neighborhood])
  @@index([submarket])
  @@index([reportDate])
}

model EmployerDP5 {
  id              String   @id @default(cuid())
  companyName     String   @unique
  sector          String
  industry        String?
  subIndustry     String?
  employeeCount   Int
  employeeGrowth  Float?
  avgSalary       Float?
  salaryRange     String?
  headquarters    String?
  primaryAddress  String?
  zipCode         String?
  campusSize      Float?
  economicImpact  Float?
  taxContribution Float?
  houstonRank     Int?
  nationalRank    Int?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([sector])
  @@index([zipCode])
  @@index([employeeCount])
}

model STRMarket {
  id                String   @id @default(cuid())
  neighborhood      String
  performanceTier   String
  activeListings    Int
  totalProperties   Int?
  professionalHosts Int?
  avgDailyRate      Float
  occupancyRate     Float
  revPAR            Float?
  annualRevenue     Float
  avgLengthOfStay   Float?
  weekendPremium    Float?
  seasonalVariance  Float?
  regulatoryStatus  String?
  permitRequired    Boolean  @default(false)
  reportDate        DateTime
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@unique([neighborhood, reportDate])
  @@index([neighborhood])
  @@index([performanceTier])
  @@index([reportDate])
}

model AreaDemographics {
  id                    String   @id @default(cuid())
  zipCode               String?
  neighborhood          String?
  tract                 String?
  totalPopulation       Int
  populationDensity     Float?
  householdCount        Int?
  avgHouseholdSize      Float?
  medianAge             Float?
  under18Percent        Float?
  over65Percent         Float?
  workingAgePercent     Float?
  whitePercent          Float?
  blackPercent          Float?
  hispanicPercent       Float?
  asianPercent          Float?
  otherRacePercent      Float?
  foreignBornPercent    Float?
  citizenPercent        Float?
  ownerOccupiedPercent  Float?
  renterOccupiedPercent Float?
  vacancyRate           Float?
  medianHomeValue       Float?
  reportYear            Int
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@unique([zipCode, reportYear])
  @@unique([neighborhood, reportYear])
  @@index([zipCode])
  @@index([neighborhood])
  @@index([reportYear])
}

model IncomeData {
  id                     String   @id @default(cuid())
  zipCode                String?
  neighborhood           String?
  medianHouseholdIncome  Float
  meanHouseholdIncome    Float?
  perCapitaIncome        Float?
  under25k               Float?
  from25to50k            Float?
  from50to75k            Float?
  from75to100k           Float?
  from100to150k          Float?
  from150to200k          Float?
  over200k               Float?
  medianGrossRent        Float?
  rentBurdenPercent      Float?
  homeAffordabilityIndex Float?
  reportYear             Int
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt

  @@unique([zipCode, reportYear])
  @@unique([neighborhood, reportYear])
  @@index([zipCode])
  @@index([neighborhood])
  @@index([medianHouseholdIncome])
  @@index([reportYear])
}

model PopulationProjection {
  id                  String   @id @default(cuid())
  zipCode             String?
  county              String?
  city                String?
  projectionYear      Int
  projectedPopulation Int
  growthRate          Float?
  growthAbsolute      Int?
  naturalIncrease     Int?
  netMigration        Int?
  agingIndex          Float?
  dependencyRatio     Float?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@unique([zipCode, projectionYear])
  @@index([zipCode])
  @@index([projectionYear])
  @@index([growthRate])
}

model EconomicIndicatorDP5 {
  id                      String   @id @default(cuid())
  area                    String
  totalEmployment         Int?
  unemploymentRate        Float?
  laborForceParticipation Float?
  gdpTotal                Float?
  gdpPerCapita            Float?
  gdpGrowthRate           Float?
  oilGasEmployment        Int?
  healthcareEmployment    Int?
  technologyEmployment    Int?
  constructionEmployment  Int?
  portTonnage             Float?
  airCargoTonnage         Float?
  commercialConstruction  Float?
  residentialConstruction Float?
  reportDate              DateTime
  reportPeriod            String
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  @@unique([area, reportDate])
  @@index([area])
  @@index([reportDate])
  @@index([gdpGrowthRate])
}

model MigrationData {
  id                     String   @id @default(cuid())
  zipCode                String?
  county                 String?
  inMigration            Int
  outMigration           Int
  netMigration           Int
  topOriginStates        Json?
  topDestinationStates   Json?
  internationalMigration Int?
  avgAgeInMigrants       Float?
  avgIncomeInMigrants    Float?
  educationLevelMigrants Json?
  migrationYear          Int
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt

  @@unique([zipCode, migrationYear])
  @@index([zipCode])
  @@index([migrationYear])
  @@index([netMigration])
}

model EducationMetrics {
  id                    String   @id @default(cuid())
  zipCode               String?
  schoolDistrict        String?
  avgSchoolRating       Float?
  testScoreReading      Float?
  testScoreMath         Float?
  graduationRate        Float?
  totalStudents         Int?
  freeReducedLunch      Float?
  englishLearners       Float?
  studentTeacherRatio   Float?
  perPupilSpending      Float?
  collegeGradPercent    Float?
  graduateSchoolPercent Float?
  academicYear          String
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@unique([zipCode, academicYear])
  @@index([zipCode])
  @@index([schoolDistrict])
  @@index([avgSchoolRating])
}

model ConstructionCostDP5 {
  id                   String   @id @default(cuid())
  area                 String
  residentialLow       Float?
  residentialMid       Float?
  residentialHigh      Float?
  commercialOffice     Float?
  commercialRetail     Float?
  commercialIndustrial Float?
  concretePrice        Float?
  steelPrice           Float?
  lumberPrice          Float?
  laborRateSkilled     Float?
  laborRateUnskilled   Float?
  laborAvailability    String?
  totalCostIndex       Float?
  materialIndex        Float?
  laborIndex           Float?
  effectiveDate        DateTime
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@unique([area, effectiveDate])
  @@index([area])
  @@index([effectiveDate])
  @@index([totalCostIndex])
}

enum LEAD_STATUS {
  NEW
  QUALIFIED
  CONTACTED
  CONVERTED
}

enum LEAD_SOURCE {
  ROI_CALCULATOR
  MARKET_REPORT
  NEWSLETTER
  DIRECT_CONTACT
  HERO_FORM
  CONSULTATION_FORM
  DEVELOPERS_PAGE
  SELLERS_PAGE
  INVESTORS_PAGE
  financing_calculator
  zoning_explorer
  market_intelligence_dashboard
  development_timeline
}

enum PROJECT_TYPE {
  SINGLE_FAMILY
  MULTI_FAMILY
  TOWNHOME
  CONDO
  MIXED_USE
  COMMERCIAL
}
